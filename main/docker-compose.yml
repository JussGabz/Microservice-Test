version: '3.8'
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    command: 'python main.py'
    ports:
      - 8001:5000
    volumes:
      - .:/app
    depends_on:
      - db
  
  queue:
    build:
      context: .
      dockerfile: Dockerfile
    command: 'python consumer.py'
    depends_on:
      - db
  
  db:
    image: mysql:5.7.22
    restart: always
    environment:
      MYSQL_DATABASE: main
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - .dbdata:/var/lib/mysql
    ports:
      - 3307:3306
  
  keycloak_demo:
    image: quay.io/keycloak/keycloak:20.0.0
    command: start-dev
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: postgres_keycloak_demo
      KC_DB_URL_DATABASE: keycloak
      KC_DB_PASSWORD: password
      KC_DB_USERNAME: keycloak
      KC_DB_SCHEMA: public
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8890:8080"
    depends_on:
      postgres_keycloak_demo:
        condition: service_healthy
    networks:
      - keycloak_demo_dev_network


  postgres_keycloak_demo:
    image: postgres:14.2
    command: postgres -c 'max_connections=200'
    volumes:
      - pgdata_keycloak_demo:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    healthcheck:
      test: "exit 0"
    ports:
      - "5436:5432"
    networks:
      - keycloak_demo_dev_network

volumes:
  pgdata_keycloak_demo:
networks:
  keycloak_demo_dev_network:
    driver: bridge


